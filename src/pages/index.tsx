import { withSessionSsr } from '@/lib/auth/witSession';
import connectDB from '@/models/mongoConnection';
import Department from '@/models/mongoSchemas/departmentSchema';
import { Box, Button, Center, Heading, Text, VStack } from '@chakra-ui/react';
import Head from 'next/head';
import { useRouter } from 'next/router';

interface HomeProps {
  user: any;
  departments: any;
}

export const getServerSideProps = withSessionSsr(
  async ({ req, res }: { req: any; res: any }) => {
    await connectDB();

    const user = req.session.user;
    const departmentsFetching = await Department.find({ available: true }).sort(
      {
        createdAt: -1,
      }
    );

    let departments = JSON.parse(JSON.stringify(departmentsFetching));

    if (departments.length == 0) {
      departments = '404';
    }

    if (!user) {
      return {
        props: { user: null, departments: departments },
      };
    }

    return {
      props: { user: user, departments: departments },
    };
  }
);

export default function Home({ user, departments }: HomeProps) {
  // - Esta pagina sera donde los usuarios sacaran sus turnos
  // ------- HOOKS ------- //
  const router = useRouter();

  return (
    <>
      <Head>
        <title>UAL - Turnos</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Center h="100vh" bgColor="gray.100">
        <Box w="sm" p={8} rounded="md" bgColor="white" boxShadow="lg">
          <Box
            textAlign={'center'}
            h={'150px'}
            display="flex"
            justifyContent="center"
            alignItems="center"
          >
            <img src="/logo.png" alt="Logo UAL" style={{ height: '100%' }} />
          </Box>
          <VStack spacing={6} align="stretch">
            <Box textAlign={'center'} pt={2}>
              <Heading size="md">
                Â¿A que departamento deseas tomar turno?
              </Heading>
            </Box>

            {departments == '404' ? (
              <Box>
                <Text textAlign={'center'} color={'red'}>
                  No hay departamentos disponibles :(
                </Text>
              </Box>
            ) : (
              departments.map((department: any) => (
                <Button
                  key={department._id}
                  colorScheme="teal"
                  onClick={() => {
                    router.push(`/take-turn/${department.name}`);
                  }}
                >
                  {department.name}
                </Button>
              ))
            )}
          </VStack>
        </Box>
      </Center>
    </>
  );
}
