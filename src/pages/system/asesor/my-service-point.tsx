import { withSessionSsr } from '@/lib/auth/witSession';
import { useToast } from '@chakra-ui/react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

interface AsesorServicePointProps {
  user: any;
}

export const getServerSideProps = withSessionSsr(
  async ({ req, res }: { req: any; res: any }) => {
    const user = req.session.user;

    if (!user) {
      return {
        props: { user: null },
      };
    }

    return {
      props: { user },
    };
  }
);

export default function AsesorServicePoint({ user }: AsesorServicePointProps) {
  // - Esta pagina donde el asesor podra gestionar su punto de servicio
  const router = useRouter();
  const toast = useToast();

  // ------- USESTATE DECLARATIONS ------- //
  const [myUser, setMyUser] = useState<any>(null);

  // ------- OBTENER MI USUARIO ------- //
  const getMyUser = async () => {
    await fetch(`/api/users/getUser?user_id=${user._id}`).then(async (res) => {
      if (res.status == 200) {
        const data = await res.json();

        // - Si el rol del usuario fue actualizado cerrar sesion
        if (data.user_data.rol != user.rol) {
          await fetch('/api/logout');
          router.push('/login');
        }

        setMyUser(data.user_data);
      }
    });
  };

  // ------- USEEFFECTS ------- //
  useEffect(() => {
    getMyUser();

    // - If the user is not logged in, redirect to /login
    if (!user || user.rol != 'asesor') {
      router.push('/login');
    }
  }, []);

  return (
    <>
      <Head>
        <title>UAL - Asesor</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>Gestionar mi punto de servicio</main>
    </>
  );
}
